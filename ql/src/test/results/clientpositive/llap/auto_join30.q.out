PREHOOK: query: create table t_1(a int, b int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t_1
POSTHOOK: query: create table t_1(a int, b int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t_1
PREHOOK: query: insert into t_1 select 1,2
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t_1
POSTHOOK: query: insert into t_1 select 1,2
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t_1
POSTHOOK: Lineage: t_1.a SIMPLE []
POSTHOOK: Lineage: t_1.b SIMPLE []
PREHOOK: query: insert into t_1 select 1,2
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t_1
POSTHOOK: query: insert into t_1 select 1,2
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t_1
POSTHOOK: Lineage: t_1.a SIMPLE []
POSTHOOK: Lineage: t_1.b SIMPLE []
PREHOOK: query: insert into t_1 select 3,4
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t_1
POSTHOOK: query: insert into t_1 select 3,4
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t_1
POSTHOOK: Lineage: t_1.a SIMPLE []
POSTHOOK: Lineage: t_1.b SIMPLE []
PREHOOK: query: select * from t_1 t1 join t_1 t2 on(t1.a=t2.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@t_1
#### A masked pattern was here ####
POSTHOOK: query: select * from t_1 t1 join t_1 t2 on(t1.a=t2.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_1
#### A masked pattern was here ####
1	2	1	2
1	2	1	2
1	2	1	2
1	2	1	2
3	4	3	4
PREHOOK: query: explain select * from t_1 t1 join t_1 t2 on(t1.a=t2.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@t_1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from t_1 t1 join t_1 t2 on(t1.a=t2.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: a is not null (type: boolean)
                  probeDecodeDetails: cacheKey:HASH_MAP_MAPJOIN_23_container, bigKeyColName:a, smallTablePos:1, keyRatio:1.0
                  Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 a (type: int)
                        1 a (type: int)
                      outputColumnNames: _col0, _col1, _col6, _col7
                      input vertices:
                        1 Map 2
                      Statistics: Num rows: 1 Data size: 132 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: _col0 (type: int), _col1 (type: int), _col6 (type: int), _col7 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 1 Data size: 132 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 1 Data size: 132 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: a (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: a (type: int)
                      Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                      value expressions: b (type: int)
            Execution mode: llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

